package com.amaze.filemanager.filesystem.root;

import com.amaze.filemanager.exceptions.ShellCommandInvalidException;
import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
import com.amaze.filemanager.filesystem.RootHelper;
import com.amaze.filemanager.filesystem.root.base.IRootCommand;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class RenameFileCommand extends IRootCommand {

    private static final Logger log = LoggerFactory.getLogger(RenameFileCommand.class);

    /**
     * Renames file using root
     *
     * @param oldPath path to file before rename
     * @param newPath path to file after rename
     * @return if rename was successful or not
     */
    public static boolean renameFile(String oldPath, String newPath) throws ShellNotRunningException {
        String mountPoint = MountPathCommand.mountPath(oldPath, MountPathCommand.READ_WRITE);
        String command = "mv \"" + RootHelper.getCommandLineString(oldPath) + "\"" +
                " \"" + RootHelper.getCommandLineString(newPath) + "\"";
        try {
            String output = runShellCommandToString(command);
            if (mountPoint != null) {
                MountPathCommand.mountPath(mountPoint, MountPathCommand.READ_ONLY);
            }
            return output.isEmpty();
        } catch (ShellCommandInvalidException e) {
            log.warn("failed to rename file", e);
            return false;
        }
    }
}

